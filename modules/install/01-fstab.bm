#!/bin/bash

function update_fstab
{
	update_status $"Updating /etc/fstab..."

	cp $TARGET_MNT_POINT/etc/fstab $TMPDIR/

	cat <<EOF >$TARGET_MNT_POINT/etc/fstab
# /etc/fstab: Filesystem Table

# filesystem  mountpoint  type  options  dump  pass
EOF

	case $HD_FSTYPE in
		reiserfs|xfs)
			echo "$HD_CHOICE	/	$HD_FSTYPE  defaults  0 1" >>$TARGET_MNT_POINT/etc/fstab
		;;
		ext?)
			echo "$HD_CHOICE	/	$HD_FSTYPE  ro,relatime,errors=continue,data=writeback  0 1" >>$TARGET_MNT_POINT/etc/fstab
		;;
		*)
			echo "$HD_CHOICE	/	$HD_FSTYPE  defaults,errors=remount-ro  0 1" >>$TARGET_MNT_POINT/etc/fstab
		;;
	esac

	# Add other HD-mappings
	for i in $HD_MAP
	do
		part=$(echo $i | cut -d":" -f1)
		point=$(echo $i | cut -d":" -f2)
		echo "$part  $point  auto  defaults,auto  0 2" >>$TARGET_MNT_POINT/etc/fstab
	done

	# Add swap devices
	cat $TMPDIR/fstab >> $TARGET_MNT_POINT/etc/fstab

	## Add swap devices
	#if [ -n "$SWAP_CHOICES" ]; then
	#	for i in $SWAP_CHOICES; do
	#		echo "$i	none		swap	defaults				0 0" >> $TARGET_MNT_POINT/etc/fstab
	#	done
	#else
	#	echo "# No swap partitions are needed." >> $TARGET_MNT_POINT/etc/fstab
	#fi

	# Add system devices
	cat >> $TARGET_MNT_POINT/etc/fstab << EOF
devpts		/dev/pts	devpts	relatime				0 0
vartmp		/var/tmp	tmpfs	nosuid,nodev,noexec,relatime		0 0
EOF
#proc		/proc		proc	relatime				0 0
#sysfs		/sys		sysfs	relatime				0 0
#usbdevfs  /proc/bus/usb  usbdevfs  defaults  0  0
#/dev/fd0	/mnt/floppy	auto	user,noauto,exec,iocharset=utf8		0 0
	mkdir -p $TARGET_MNT_POINT/mnt/floppy

	# Add CD-Roms/DVD/...
	#for i in /dev/cdrom* /dev/dvd /dev/cdaudio
	for i in /dev/cdroms/cdrom*
	do
		[ -L $i ] || continue
		#echo "$i /${i/\/dev\//}  iso9660  defaults,ro,user,noexec,noauto  0  0" >> $TARGET_MNT_POINT/etc/fstab
		#mkdir -p $TARGET_MNT_POINT/${i/\/dev\//}
		#readlink $i | grep -q "$DEFAULT_DIR" || cp -a $i $TARGET_MNT_POINT/dev/

		echo "$i	/mnt/${i/\/dev\/cdroms\//}	auto	user,noauto,exec		0 0" >> $TARGET_MNT_POINT/etc/fstab
		mkdir -p $TARGET_MNT_POINT/mnt/${i/\/dev\/cdroms\//}
	done

	# Let Berry Linux detect all other partitions
	echo >> $TARGET_MNT_POINT/etc/fstab
	#chroot "$TARGET_MNT_POINT" mount -t devfs none /dev
	chroot "$TARGET_MNT_POINT" mount -t proc none /proc
	chroot "$TARGET_MNT_POINT" mount -t sysfs none /sys
	cp -a /dev/[hs]d* $TARGET_MNT_POINT/dev/
	chroot "$TARGET_MNT_POINT" /opt/berry/fs -c -d >> /etc/fstab
	rm $TARGET_MNT_POINT/dev/[hs]d*
	chroot "$TARGET_MNT_POINT" umount /sys
	chroot "$TARGET_MNT_POINT" umount /proc
	#chroot "$TARGET_MNT_POINT" umount /dev

	## NTFS Partition(en) mit umask=000 Option ausstatten (by Joerg Schirottke)
	#perl -pi -e 's/(ntfs noauto,users,exec,ro).*/\1,umask=000 0 0/' $TARGET_MNT_POINT/etc/fstab

	## Alle Partitionen auf IDE Platten automatisch mounten (nur in Kano's Knoppix)
	#[ $INSTALL_KANO == "yes" ] && perl -pi -e #'s|^(/dev/hd.*)noauto(.*)|\1auto\2|' $TARGET_MNT_POINT/etc/fstab

	## remove uid=, gid= - entries for vfat; instead use that of running process
	#perl -pi -e 's/(vfat noauto,users,exec).*/\1,umask=000 0 0/' $TARGET_MNT_POINT/etc/fstab
}
